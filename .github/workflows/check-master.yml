## Read more about GitHub actions the features of this GitHub Actions workflow
## at https://lcolladotor.github.io/biocthis/articles/biocthis.html#use_bioc_github_action
##
## For more details, check the biocthis developer notes vignette at
## https://lcolladotor.github.io/biocthis/articles/biocthis_dev_notes.html
##
## You can add this workflow to other packages using:
## > biocthis::use_bioc_github_action()
## or
## > usethis::use_github_action("check-bioc", "https://bit.ly/biocthis_gha", "check-bioc.yml")
## without having to install biocthis.
##
## Using GitHub Actions exposes you to many details about how R packages are
## compiled and installed in several operating system.s
## If you need help, please follow the steps listed at
## https://github.com/r-lib/actions#where-to-find-help
##
## If you found an issue specific to biocthis's GHA workflow, please report it
## with the information that will make it easier for others to help you.
## Thank you!

## Acronyms:
## * GHA: GitHub Action
## * OS: operating system

## Specify which branches you want this GHA to run on.
## Bioconductor uses branches such as master (bioc-devel) and RELEASE_* like
## RELEASE_3_10. For more details check
## http://bioconductor.org/developers/how-to/git/
on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: check-master

## These environment variables control whether to run GHA code later on that is
## specific to testthat, covr, and pkgdown.
##
## If you need to clear the cache of packages, update the number inside
## cache-version as discussed at https://github.com/r-lib/actions/issues/86.
## Note that you can always run a GHA test without the cache by using the word
## "/nocache" in the commit message.
env:
  has_testthat: 'true'
  run_covr: 'false'
  run_pkgdown: 'true'
  has_RUnit: 'false'
  cache-version: 'cache-v2'

jobs:
  ## This first job uses the GitHub repository branch name to infer what
  ## version of Bioconductor we will be working on.
  define-docker-info:
    runs-on: ubuntu-latest
    outputs:
      imagename: ${{ steps.findinfo.outputs.imagename }}
      biocversion: ${{ steps.findinfo.outputs.biocversion }}
    steps:
      - id: findinfo
        run: |
          ## Find what Bioconductor RELEASE branch we are working on
          ## otherwise, assume we are working on bioc-devel.
          ###if echo "$GITHUB_REF" | grep -q "RELEASE_"; then
          ###    biocversion="$(basename -- $GITHUB_REF | tr '[:upper:]' '[:lower:]')"
          ###else
          biocversion="release" # biocversion="devel"
          ###fi
          ## Define the image name and print the information
          imagename="bioconductor/bioconductor_docker:${biocversion}"
          echo $imagename
          echo $biocversion
          ## Save the information for the next job
          echo "::set-output name=imagename::${imagename}"
          echo "::set-output name=biocversion::${biocversion}"
  R-CMD-check-bioc:
    ## This job then checks the R package using the Bioconductor docker that
    ## was defined by the previous job. This job will determine what version of
    ## R to use for the macOS and Windows builds on the next job.
    runs-on: ubuntu-latest
    needs: define-docker-info

    ## Name shown on the GHA log
    name: ubuntu-latest

    ## Information used by the next job that will run on macOS and Windows
    outputs:
      rversion: ${{ steps.findrversion.outputs.rversion }}
      biocversionnum: ${{ steps.findrversion.outputs.biocversionnum }}

    ## Environment variables unique to this job.
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      TZ: UTC
      NOT_CRAN: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    ## The docker container to use. Note that we link a directory on the GHA
    ## runner to a docker directory, such that we can then cache the linked
    ## directory. This directory will contain the R packages used.
    ###container:
    ###  image: ${{ needs.define-docker-info.outputs.imagename }}
    ###  volumes:
    ###    - /home/runner/work/_temp/Library:/usr/local/lib/R/host-site-library

    steps:
      - name: Install latest git
        run: |
          ## git version provided
          git --version
